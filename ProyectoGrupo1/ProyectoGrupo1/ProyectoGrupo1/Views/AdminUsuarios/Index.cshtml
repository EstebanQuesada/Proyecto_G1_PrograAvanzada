@model ApiAdminUsuarioClient.PagedResult<ApiAdminUsuarioClient.AdminUserListItemDto>
@{
    ViewData["Title"] = "Administración de usuarios";

    var q = ViewContext.HttpContext.Request.Query["q"].ToString();
    int pageIndex = 1, pageSize = 10;
    int.TryParse(ViewContext.HttpContext.Request.Query["page"], out pageIndex);
    int.TryParse(ViewContext.HttpContext.Request.Query["pageSize"], out pageSize);

    var hasItems = Model?.Items != null && Model.Items.Any();
}

@if (TempData["Msg"] is string msg)
{
    <div class="alert alert-warning">@msg</div>
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <form method="get" class="d-flex gap-2">
        <input type="text" class="form-control" name="q" value="@q" placeholder="Buscar nombre/correo" />
        <input type="hidden" name="pageSize" value="@pageSize" />
        <button class="btn btn-outline-primary">Buscar</button>
        <a asp-action="Index" class="btn btn-outline-secondary">Limpiar</a>
    </form>

    <a asp-action="Crear" class="btn btn-primary">Nuevo usuario</a>
</div>

<table class="table table-striped align-middle">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Correo</th>
            <th>Rol</th>
            <th>Estado</th>
            <th class="text-end">Acciones</th>
        </tr>
    </thead>
    <tbody>
        @if (hasItems)
        {
            foreach (var u in Model!.Items)
            {
                <tr>
                    <td class="text-muted">@u.UsuarioID</td>
                    <td>@u.Nombre @u.Apellido</td>
                    <td>@u.Correo</td>
                    <td>@u.RolID</td>
                    <td>@(u.Activo ? "Activo" : "Inactivo") @(u.Bloqueado ? "/ Bloqueado" : "")</td>
                    <td class="text-end">
                        <a asp-action="Editar" asp-route-id="@u.UsuarioID"
                           class="btn btn-sm btn-outline-secondary">Editar</a>

                        <form asp-action="Bloquear" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@u.UsuarioID" />
                            <input type="hidden" name="bloqueado" value="@(u.Bloqueado ? "false" : "true")" />
                            <button class="btn btn-sm btn-warning">@(u.Bloqueado ? "Desbloquear" : "Bloquear")</button>
                        </form>

                        <form asp-action="Eliminar" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@u.UsuarioID" />
                            <button class="btn btn-sm btn-outline-danger" onclick="return confirm('¿Eliminar (soft) este usuario?');">Eliminar</button>
                        </form>

                        <form asp-action="Restaurar" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@u.UsuarioID" />
                            <button class="btn btn-sm btn-success">Restaurar</button>
                        </form>

                        <form asp-action="CambiarRol" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@u.UsuarioID" />
                            <input type="hidden" name="rolId" value="@(u.RolID == 1 ? 2 : 1)" />
                            <button class="btn btn-sm btn-info">@(u.RolID == 1 ? "Hacer Admin" : "Hacer Cliente")</button>
                        </form>

                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="6" class="text-center text-muted">No hay usuarios para mostrar.</td></tr>
        }
    </tbody>
</table>

@{
    if (hasItems)
    {
        var totalPages = (int)Math.Ceiling(Model!.Total / (double)pageSize);
        <nav class="mt-3" aria-label="Paginación">
            <ul class="pagination justify-content-end">
                <li class="page-item @(pageIndex <= 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-page="@(pageIndex - 1)" asp-route-pageSize="@pageSize" asp-route-q="@q">Anterior</a>
                </li>
                <li class="page-item disabled"><span class="page-link">Página @pageIndex de @totalPages</span></li>
                <li class="page-item @(pageIndex >= totalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-page="@(pageIndex + 1)" asp-route-pageSize="@pageSize" asp-route-q="@q">Siguiente</a>
                </li>
            </ul>
        </nav>
    }
}

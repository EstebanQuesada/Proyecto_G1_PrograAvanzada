@model ProyectoGrupo1.Models.ProductoDetalleViewModel
@using ProyectoGrupo1.Models
@{
    ViewData["Title"] = "Detalle del Producto";
    var ptcs = ViewBag.PTCs as List<ProductoTallaColor>;
    var ptcsJson = System.Text.Json.JsonSerializer.Serialize(ptcs);
    var mensaje = TempData["Mensaje"] as string;
}


<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            @if (Model.Imagenes != null && Model.Imagenes.Count > 0)
            {
                <div id="galeria" class="mb-3">
                    <img src="@Model.Imagenes[0]" class="img-fluid border rounded" style="max-height: 400px;" alt="Imagen principal" />
                    <div class="mt-3 d-flex gap-2">
                        @foreach (var img in Model.Imagenes)
                        {
                            <img src="@img" width="70" height="70" style="object-fit: cover;" class="border rounded" />
                        }
                    </div>
                </div>
            }
        </div>

        <div class="col-md-6">
            <h2>@Model.Nombre</h2>
            <p class="text-muted">@Model.Categoria</p>
            <p>@Model.Descripcion</p>
            <h4 class="text-success">₡@Model.Precio</h4>

            @if (!string.IsNullOrEmpty(mensaje))
            {
                <div class="alert alert-success">@mensaje</div>
            }

            <form asp-controller="Carrito" asp-action="Agregar" method="post">
                <div class="mb-2">
                    <label><strong>Talla:</strong></label>
                    <select id="tallaSelect" class="form-select">
                        <option value="">Seleccione una talla</option>
                        @foreach (var talla in Model.Tallas)
                        {
                            <option value="@talla">@talla</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label><strong>Color:</strong></label>
                    <select id="colorSelect" class="form-select">
                        <option value="">Seleccione un color</option>
                        @foreach (var color in Model.Colores)
                        {
                            <option value="@color">@color</option>
                        }
                    </select>
                </div>

                <input type="hidden" id="ptcIdInput" name="ptcId" />
                <div class="mb-3">
                    <label><strong>Cantidad:</strong></label>
                    <input type="number" name="cantidad" value="1" min="1" class="form-control" style="width:100px;" />
                </div>
                <button type="submit" class="btn btn-primary w-100" id="agregarCarritoBtn" disabled>Agregar al carrito</button>
            </form>

            <script>
                // Relacionar talla y color con PTCID
                const ptcs = @Html.Raw(ptcsJson);
                const tallaSelect = document.getElementById('tallaSelect');
                const colorSelect = document.getElementById('colorSelect');
                const ptcIdInput = document.getElementById('ptcIdInput');
                const agregarBtn = document.getElementById('agregarCarritoBtn');

                function actualizarPTC() {
                    const talla = tallaSelect.value;
                    const color = colorSelect.value;
                    const ptc = ptcs.find(x => x.NombreTalla === talla && x.NombreColor === color);
                    if (ptc) {
                        ptcIdInput.value = ptc.PTCID;
                        agregarBtn.disabled = false;
                    } else {
                        ptcIdInput.value = '';
                        agregarBtn.disabled = true;
                    }
                }
                tallaSelect.addEventListener('change', actualizarPTC);
                colorSelect.addEventListener('change', actualizarPTC);
            </script>
        </div>
    </div>
}



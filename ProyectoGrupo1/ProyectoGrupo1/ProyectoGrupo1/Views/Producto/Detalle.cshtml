@model ProyectoGrupo1.Models.ProductoDetalleViewModel
@using System.Text.Json

@{
    ViewData["Title"] = "Detalle del Producto";
    var ptcsJson = JsonSerializer.Serialize(Model.PTCs ?? new List<ProyectoGrupo1.Models.ProductoTallaColor>());
    var tallas = Model.Tallas ?? new List<string>();
    var colores = Model.Colores ?? new List<string>();
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            @if (Model.Imagenes != null && Model.Imagenes.Count > 0)
            {
                <img src="@Model.Imagenes[0]" class="img-fluid border rounded mb-3" alt="Imagen principal" />
                <div class="d-flex gap-2">
                    @foreach (var img in Model.Imagenes)
                    {
                        <img src="@img" width="70" height="70" style="object-fit:cover" class="border rounded" />
                    }
                </div>
            }
        </div>

        <div class="col-md-6">
            <h2>@Model.Nombre</h2>
            <p class="text-muted">@Model.Categoria</p>
            <p>@Model.Descripcion</p>
            <h4 class="text-success">₡@Model.Precio</h4>

            @if (TempData["Mensaje"] is string ok && !string.IsNullOrWhiteSpace(ok))
            {
                <div class="alert alert-success">@ok</div>
            }
            @if (TempData["Error"] is string err && !string.IsNullOrWhiteSpace(err))
            {
                <div class="alert alert-warning">@err</div>
            }

            <form asp-controller="Carrito" asp-action="Agregar" method="post" class="mt-3">
                @Html.AntiForgeryToken()

                <div class="mb-2">
                    <label><strong>Talla:</strong></label>
                    <select id="tallaSelect" class="form-select">
                        <option value="">Seleccione una talla</option>
                        @foreach (var t in tallas)
                        {
                            <option value="@t">@t</option>
                        }
                    </select>
                </div>

                <div class="mb-2">
                    <label><strong>Color:</strong></label>
                    <select id="colorSelect" class="form-select">
                        <option value="">Seleccione un color</option>
                        @foreach (var c in colores)
                        {
                            <option value="@c">@c</option>
                        }
                    </select>
                </div>

                <div class="mb-3 d-flex align-items-center gap-2">
                    <div>
                        <label><strong>Cantidad:</strong></label>
                        <input id="cantidadInput" type="number" name="cantidad" value="1" min="1" class="form-control" style="width:100px;">
                    </div>
                    <span id="stockBadge" class="badge bg-secondary">Stock: —</span>
                </div>

                <input type="hidden" id="ptcIdInput" name="ptcId" value="0" />

                <button id="agregarBtn" type="submit" class="btn btn-primary w-100" disabled>Agregar al carrito</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const ptcs = @Html.Raw(ptcsJson);

        const tallaSel   = document.getElementById('tallaSelect');
        const colorSel   = document.getElementById('colorSelect');
        const cantidadEl = document.getElementById('cantidadInput');
        const ptcHidden  = document.getElementById('ptcIdInput');
        const stockBadge = document.getElementById('stockBadge');
        const addBtn     = document.getElementById('agregarBtn');

        function actualizarPTC() {
            const talla = tallaSel.value;
            const color = colorSel.value;

            if (!talla || !color) {
                ptcHidden.value = "0";
                stockBadge.textContent = "Stock: —";
                cantidadEl.max = "";
                addBtn.disabled = true;
                return;
            }

            const match = ptcs.find(x => x.NombreTalla === talla && x.NombreColor === color);

            if (!match) {
                ptcHidden.value = "0";
                stockBadge.textContent = "Stock: —";
                cantidadEl.max = "";
                addBtn.disabled = true;
                return;
            }

            ptcHidden.value = String(match.PTCID);
            stockBadge.textContent = "Stock: " + match.Stock;

            const max = Math.max(1, match.Stock);
            cantidadEl.max = String(max);
            if (+cantidadEl.value < 1) cantidadEl.value = "1";
            if (+cantidadEl.value > max) cantidadEl.value = String(max);

            addBtn.disabled = (match.Stock <= 0);
        }

        tallaSel.addEventListener('change', actualizarPTC);
        colorSel.addEventListener('change', actualizarPTC);

        document.addEventListener('DOMContentLoaded', actualizarPTC);
    </script>
}

